openapi: 3.0.0
info:
  title: Platform REST APIs
  version: Evergreen
  x-readme:
    explorer-enabled: true
    samples-enabled: true
    samples-languages:
      - curl
      - node
      - javascript
      - ruby
      - python
      - java
      - csharp
      - go
servers:
  - url: 'https://prod.apigateway.co/platform'
    description: Production
  - description: Demo
    url: 'https://demo.apigateway.co/platform'
  - description: Local
    url: '{local}/platform'
  - url: 'http://localhost:11001/platform'
    description: Localhost
paths:
  /contacts:
    post:
      summary: Create Contact
      operationId: post-contact
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/contact'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created contact
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The address of the newly created contact
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Use this operation to create a new Contact for a business.

        An email and business location must be provided when creating a contact.

        Note: Currently when creating a contact you must specify exactly 1 Business Location id for it to be linked to. We intend to expand this limit.
      security:
        - OAuth:
            - sales.contact
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/contact'
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      tags:
        - Contacts
    options:
      operationId: options-contact
      tags:
        - Contacts
      summary: List valid HTTP verbs for /contact
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
  '/contacts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The ID of the contact to be returned
    get:
      summary: Get Contact
      tags:
        - Contacts
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/contact'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      operationId: get-contact-id
      security:
        - OAuth:
            - sales.contact
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Fetch the current values for the specified sales contact
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
    options:
      operationId: options-contact-id
      summary: 'List valid HTTP verbs for /contact/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Contacts
  /businessLocations:
    post:
      summary: Create Business Location
      operationId: post-businessLocation
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessLocation'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created business location
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The address of the newly created business location
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/businessLocation'
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Used to record basic data for a new location.

        The following members must be populated during creation:
        - `relationships.businessPartner.data.id`
        - `attributes.name`
        - `attributes.address.countryCode` as well as other address fields based on the norms of the country.
        - `relationships.categories.data.[].id` - At least one category must be provided
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            enum:
              - businessCategory
          in: query
          name: include
          description: A comma separated list of related records that should be embedded in the response
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth:
            - business
      tags:
        - Business Locations
    options:
      operationId: options-businessLocation
      summary: List valid HTTP verbs for /businessLocation
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Business Locations
  '/businessLocations/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Business Location
      tags:
        - Business Locations
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessLocation'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      operationId: get-businessLocation-id
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Returns basic data about the business location.
      parameters:
        - schema:
            type: string
            enum:
              - businessCategory
          in: query
          name: include
          description: A comma separated list of related records that should be embedded in the response
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      security:
        - OAuth:
            - business
    options:
      operationId: options-businessLocation-id
      summary: 'List valid HTTP verbs for /businessLocation/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Business Locations
    patch:
      summary: Update Business Location
      operationId: patch-businessLocation-id
      tags:
        - Business Locations
      description: |-
        [Status](/docs/versioning): `Experimental`

        Update the existing business location. 
        Only the root ID and type fields are required. All others are optional and will keep their original value if omitted.
      x-lifecycle:
        status: experimental
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            enum:
              - businessCategory
          in: query
          name: include
          description: A comma separated list of related records that should be embedded in the response
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth:
            - business
      responses:
        '200':
          description: Ok
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/businessLocation'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created business location
          headers: {}
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/businessLocation'
  /invoices:
    get:
      summary: List Invoices
      tags:
        - Invoices
      operationId: get-invoice
      security:
        - OAuth:
            - financial
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Produces a list of invoice for wholesale fees
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
          in: query
          name: 'filter[partner.id]'
          description: Only return invoice that were sent to the specified partner
          required: true
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[createdAt][>]'
          description: Only return invoice created after the specified time
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[createdAt][<]'
          description: Only return invoice created before the specified time
        - schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 10
          in: query
          name: 'page[limit]'
          description: The maximum number of tasks you would like returned in a single batch. Use the links.next member in the response to get the remainder.
        - schema:
            type: string
          in: query
          name: 'page[cursor]'
          description: The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links.
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/invoice'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of invoice can be gotten from
                        format: uri
    options:
      operationId: options-invoice
      summary: 'List valid HTTP verbs for /invoice/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Invoices
  /businessCategories:
    get:
      summary: List Business Categories
      operationId: get-businessCategory
      tags:
        - Business Cateogry
      security:
        - OAuth:
            - business
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Produces a list of business categories
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: integer
            minimum: 0
            maximum: 1000
            default: 10
          in: query
          name: 'page[limit]'
          description: The maximum number of tasks you would like returned in a single batch. Use the links.next member in the response to get the remainder.
        - schema:
            type: string
          in: query
          name: 'page[cursor]'
          description: The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links.
        - schema:
            type: string
          in: header
          name: Accept-Language
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/businessCategory'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                      first:
                        type: string
                        description: Provides a link back to the first page of results
                        format: uri
                      next:
                        type: string
                        description: The URI at which the next batch of invoice can be gotten from
                        format: uri
  /orders:
    post:
      summary: Create Order
      operationId: post-order
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/order'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
                        description: The address of the newly created order
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The address of the newly created order
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/order'
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Use this operation to create a new order for a business.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            default: application/vnd.api+json
            enum:
              - application/vnd.api+json
          in: header
          name: Content-Type
          required: true
          description: Indicates the format of the request body being sent. In most cases you will want `application/vnd.api+json`
      security:
        - OAuth:
            - order
      tags:
        - Orders
  /orders/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The composite id {businessId:orderId} of the order to be returned
    get:
      summary: Get Order
      tags:
        - Orders
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/order'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      operationId: get-order-id
      security:
        - OAuth:
            - order
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Fetch the current values for the specified order.
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
            pattern: ^Bearer\s\S+
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
    options:
      operationId: options-order-id
      summary: 'List valid HTTP verbs for /order/{id}'
      description: 'Used solely for [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) the OPTIONS request returns the list of possible HTTP methods and other headers that browsers use to protect user''s security. You should not call this operation directly. '
      responses:
        '204':
          description: No Content
      tags:
        - Orders
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://sso-api-demo.apigateway.co/oauth2/auth'
          tokenUrl: 'https://sso-api-demo.apigateway.co/oauth2/token'
          scopes:
            sales.contact: Read-write access to sales contact details
            business: Read-write access to business details
            partner: Read-write access to details about your partner
            financial: Read-write access to financial details
  schemas:
    businessLocation:
      title: Business Location
      type: object
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Any entity that works with a provider company (two-way communication). These generally have a sustained relationship with the provider company. This may include a potential buyer, an existing client, or a past client that has churned.
      x-tags:
        - Business Locations
      properties:
        id:
          type: string
          example: AG-1234567
        type:
          type: string
          default: businessLocation
          enum:
            - businessLocation
        attributes:
          type: object
          properties:
            customerIdentifier:
              type: string
              description: 'A value assigned by the business partner to reference this business location. Customer ID is currently NOT enforced to be unique, and there may be negative side effects to having a duplicate and/or changing a customer ID, specifically around legacy SSO. Use caution when editing a customer ID.'
            name:
              type: string
              description: The common name for this location
            address:
              type: object
              properties:
                line1:
                  type: string
                line2:
                  type: string
                city:
                  type: string
                stateCode:
                  type: string
                  maxLength: 2
                  minLength: 2
                  example: CA
                  description: The two letter state code within the country
                zip:
                  type: string
                countryCode:
                  type: string
                  maxLength: 2
                  minLength: 2
                  example: CA
                  description: 'The two letter country code defined by [ISO 3166-1](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes)'
            phoneNumbers:
              type: array
              description: |-
                The standard phone numbers for the location.
                Formating characters may be included.

                **Extentions**

                It is recommended that extentions are included at the end of the number after an appropriate seperator: Pause: `,` Wait: `;` Default: `ext.`

                You may test the parsibility of a number using https://phonenumbers.temba.io/ All phone numbers are assumed to be in the same country as this business location.
              items:
                type: string
            serviceAreaBusiness:
              type: boolean
              description: When true the address will be used as the center of the area that this location services instead of being displayed.
            geoCoordinate:
              type: object
              description: |-
                The point where the map pin for the location should be displayed. 

                The values will **not** be automatically updated when the address is updated. If not provided when creating the location they will be initilized based on the address.

                It is expressed as a pair of numbers to represent degrees latitude and degrees longitude in accordance with the [WGS84](https://en.wikipedia.org/wiki/World_Geodetic_System) standard (the one used by your GPS).
              properties:
                latitude:
                  type: number
                  minimum: -90
                  maximum: 90
                longitude:
                  type: number
                  minimum: -180
                  maximum: 180
              required:
                - latitude
                - longitude
        relationships:
          type: object
          properties:
            businessPartner:
              type: object
              description: A link to the organization that provides the platform to this business location.
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      default: organizations
                      enum:
                        - organizations
                    id:
                      type: string
                      example: ABC
              required:
                - data
            businessCategory:
              type: object
              description: A list of the types of business this location should be compared against. If not set during creation it will default "other".
              properties:
                data:
                  type: array
                  maxItems: 3
                  minItems: 1
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        default: businessCategory
                        enum:
                          - businessCategory
                        example: businessCategory
                      id:
                        type: string
                        example: 'active:diving:freediving'
                    required:
                      - type
                      - id
    contact:
      title: Contact
      type: object
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        A Sales Contact is a person who works for the business that your sales team may send communications to reguarding the business.

        Note: Currently when creating a contact you must specify exactly 1 businessLocation id for it to be linked to. We intend to expand this limit.
      x-tags:
        - Contacts
      properties:
        type:
          type: string
          default: contact
          example: contact
          enum:
            - contact
        id:
          type: string
          description: The id will be assigned by the server and must be included on all update requests. Values sent during creation will be ignored.
        attributes:
          type: object
          properties:
            givenName:
              type: string
              maxLength: 25
              description: 'Given name(s) or first name(s) of the contact. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.'
              example: Samantha
            familyName:
              type: string
              maxLength: 25
              description: 'Surname(s) or last name(s) of the contact. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.'
              example: Smith
            phone:
              type: string
              description: |-
                The complete primary phone number for the contact.
                Formating characters may be included.

                **Extentions**

                It is recommended that extentions are included at the end of the number after a supported seperator: `,` (touch tone Pause),  `;` (touch tone Wait), `;ext=` (RFC3966/SIP/ tel: link protocol),  `ext.` (default)

                You may test the parsibility of a number using https://phonenumbers.temba.io/
              example: +1 (306) 555-1234 ext. 89
            phoneCountryCode:
              type: string
              description: 'An optional 2 character country code used to aid in parsing the raw number.'
              maxLength: 2
              minLength: 2
              example: CA
            email:
              type: string
              format: email
              description: 'Required during creation: The primary email address for the contact'
              example: sam@example.com
        relationships:
          type: object
          properties:
            locations:
              type: object
              description: 'Required during creation: The business locations that this contact has a connection to'
              properties:
                data:
                  type: array
                  minItems: 1
                  maxItems: 1
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: AG-1234
                      type:
                        type: string
                        default: businessLocation
                        enum:
                          - businessLocation
                    required:
                      - id
                      - type
                links:
                  type: object
                  description: Readonly links for pagging over the list of locations
                  properties:
                    self:
                      type: string
                      format: uri
                      example: 'https://prod.apigateway.co/platform/contact/U-123/relationships/locations'
                      readOnly: true
                    next:
                      type: string
                      format: uri
                      example: 'https://prod.apigateway.co/platform/contact/U-123/relationships/locations?page[cursor]=567'
                      readOnly: true
                  readOnly: true
                meta:
                  type: object
                  description: Readonly
                  properties:
                    total:
                      type: integer
                      description: 'Readonly: The total number of locations connected to this contact'
                      readOnly: true
                  readOnly: true
      required:
        - type
    invoice:
      title: Invoice
      type: object
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        Invoices generated by the platform to record the wholesale fees that are charged to a partner for products they sell to their customers. One time fees and each renewal will appear as seperate line items broken out per customer.


        All amounts will be specified in the minor unit of the invoice's currency. For example in the case of USD that would be cents. For more info on converting between minor and major units see [this wikipedia article](https://en.wikipedia.org/wiki/ISO_4217#Minor_units_of_currency).
      x-tags:
        - Invoices
      properties:
        id:
          type: string
          description: 'A platform generated identifier for the invoice '
        type:
          type: string
          enum:
            - invoice
        attributes:
          type: object
          properties:
            createdAt:
              description: The time at which the invoice was created
              format: date-time
              type: string
            statusCode:
              type: string
              enum:
                - draft
                - due
                - overdue
                - paid
                - uncollectible
              description: |-
                The payment status of the invoice will be one of the following:
                - `draft`:  Indicates the invoice is not closed yet. New line items can be added when the invoice is in this state.
                - `due`: The invoice has been finialized and is ready to be paid.
                - `overdue`: The invoice is unpaid and has past the due date
                - `paid`: The full amount has been paid.
                - `uncollectible`: After multiple failed attempts to collect payment it's unlikely that this invoice will be paid
            discountAmount:
              type: integer
              description: The sum of all price reductions applied to products
            taxAmount:
              type: integer
              description: The sum of all taxes applied to items of the invoice
            total:
              type: integer
              description: 'The total amount the invoice is for, accounting for any applied discounts or taxes'
            currencyCode:
              type: string
              minLength: 3
              maxLength: 3
              example: CAD
              description: 'The 3 letter currency code as defined by [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)'
            lineItems:
              type: array
              items:
                type: object
                properties:
                  sku:
                    type: string
                    description: The unique identifier of a product or service
                  customerId:
                    type: string
                    description: The ID of the organization that purchased the product
                  unitAmount:
                    description: The wholesale cost of the product before discounts or taxes are applied.
                    type: integer
                  discountAmount:
                    description: The total amount the cost of this product has been reduced by
                    type: integer
                  taxAmount:
                    description: The total amount of tax charged for this product
                    type: integer
                  total:
                    description: The final cost of the product accounting for any applied discounts or taxes
                    type: integer
        relationships:
          type: object
          properties:
            recipient:
              type: object
              description: The partner that the invoice is being sent to. They will be the one who purchased the product at a wholesale rate and activated it for one of their customers
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                      minLength: 3
                      maxLength: 4
                    type:
                      type: string
                      enum:
                        - partner
              required:
                - data
      required:
        - id
        - type
    order:
      title: Order
      type: object
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        An order for a business location.
      x-tags:
        - Orders
      properties:
        id:
          type: string
          example: ORD-123456
          readOnly: true
        businessId:
          type: string
          example: AG-1234567
        lineItems:
          type: array
          items:
            type: object
            properties:
              sku:
                type: string
                description: The unique identifier of a product or service
              editionId:
                type: string
                description: The edition of a product or service
              packageId:
                type: string
                description: The unique identifier of a store package
              quantity:
                type: integer
                description: The number of units ordered
              amount:
                type: integer
                description: The amount in cents of the item
        currencyCode:
          type: string
          minLength: 3
          maxLength: 3
          example: CAD
          description: 'The 3 letter currency code as defined by [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)'
    partner:
      title: Partner
      type: object
      x-lifecycle:
        status: proposed
      description: |-
        [Status](/docs/versioning): `Proposed`

        A partner is an organization that has a store filled with products that other organizations can purchase.


        Partners may fill one or more of the following roles:
        - **Business Partner**: Have a direct billing relationship with SMBs
        - **Vendor**: Integrate goods into the Vendasta platform to be sold by Business Partners to SMBs
        - **Service Provider**: Integrate services into the Vendasta platform that they will fulfill for SMBs

        Note: Small/Medium-Sized Businesses (SMBs) are represented by their primary Business Location record. They may only buy products through their Business Partner.
      properties:
        id:
          type: string
          minLength: 3
          maxLength: 4
        type:
          type: string
          enum:
            - partner
        attributes:
          type: object
          properties:
            name:
              type: string
              description: The public name for the organization
          required:
            - name
        relationships:
          type: object
          properties:
            parent:
              type: object
              description: 'The parent partner is the partner that this partner primarily purchases stuff from. '
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                      minLength: 3
                      maxLength: 4
                    type:
                      type: string
                      enum:
                        - partner
              required:
                - data
      required:
        - id
        - type
      x-tags:
        - Partners
      x-examples:
        example-1:
          id: ABC
          type: partner
          attributes:
            name: Mountain Media
          relationships:
            parent:
              data:
                id: VMF
                type: partner
    businessCategory:
      title: Business Category
      type: object
      x-lifecycle:
        status: experimental
      description: |-
        [Status](/docs/versioning): `Experimental`

        The taxonomy to be applied to business locations indicating the type of services that they provide. 
      x-tags:
        - Business Categories
      properties:
        id:
          type: string
          example: AG-1234567
          readOnly: true
        type:
          type: string
          default: businessCategory
          enum:
            - businessCategory
          readOnly: true
        attributes:
          type: object
          properties:
            name:
              type: string
              description: A user friendly description for the category. It will have been translated based on the Accept-Language header.
              readOnly: true
tags:
  - name: Contacts
  - name: Business Locations
  - name: Partners
  - name: Invoices
  - name: Business Categories
  - name: Orders
