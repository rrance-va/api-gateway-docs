openapi: 3.0.0
info:
  description: This is the Unified API Set
  version: 0.1.0
  title: Vendasta Consolidated Context
  termsOfService: 'https://vendasta.com/terms'
  contact:
    email: api@vendasta.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:8080'
    description: Local test server
tags:
  - name: finance-partner
    description: A Partner is an entity that has the right to sell products within the platform.
  - name: hr-employee
    description: An employee works for a partner and has access to use the platform.
  - name: hr-team
    description: A team is a group of employees within a partner.
  - name: hr-role
    description: A role is a logical grouping of OAuth2 scopes used to simplify permission management.
  - name: crm-customer
    description: A customer is an entity that has a billing relationship with a partner.
paths:
  /terms:
    get:
      summary: List Terms
      operationId: get-terms
      responses:
        '200':
          description: OK
      description: ''
      parameters: []
      security:
        - OAuth2: []
  /crm/customers:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-crm-customers
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://sso-api-demo.apigateway.co/oauth2/auth'
          tokenUrl: 'https://sso-api-demo.apigateway.co/oauth2/token'
          scopes:
            terms.write: write terms
            finance.partners.read: read partners
            hr.employees.read: read employees
            hr.teams.read: read teams
            hr.roles.read: read roles
            hr.roles.write: write roles
            crm.customers.read: read customers
            crm.customers.write: write customers
            crm.contacts.read: read contacts
            crm.contacts.write: write contacts
            sales.leads.read: read leads
            sales.opportunities.read: read opportunities
            sales.orders.read: read orders
            product.products.read: read products
            product.packages.read: read packages
  parameters:
    OrgId:
      name: org_id
      in: path
      required: true
      schema:
        type: string
    Id:
      name: id
      in: path
      required: true
      schema:
        type: string
    PageSize:
      name: 'page[size]'
      in: query
      schema:
        type: number
      allowReserved: true
    PageOffset:
      name: 'page[offset]'
      in: query
      schema:
        type: number
      allowReserved: true
    PageCursor:
      name: 'page[cursor]'
      in: query
      schema:
        type: string
      allowReserved: true
  headers:
    allow:
      description: Allowed HTTP verbs
      schema:
        type: string
  schemas:
    Term:
      type: object
      x-examples: {}
      properties:
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        name:
          type: string
        definition:
          type: string
        context:
          type: string
          enum:
            - crm
            - hr
            - financial
            - sales
            - product
            - cms
            - communication
      required:
        - created
        - modified
        - name
        - definition
        - context
        - id
